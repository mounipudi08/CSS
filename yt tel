CSS Implementation

1) External File CSS
2)In-Page CSS
3)In Line CSS

Selectors
1) Class Selctor
2)Id selector

Id have only one value but if we use class 
we can create so many elements

id attribuite --> #
class attribute --> .

measurment units
--> pixels ,percentage
If we take percentage we have to take according to screen size
if we take pixels there is no end for that

Borders
units border-style color

For border we can use 
dashed,dotted,solid

Text Decoration

 1) span
 2) text-align
3) word-spacing
4)letter-spacing

Fonts 

--> font-family
     font-weight 
    font size
     font style
     font spacing

font-family 

@import url('rom the google fonts')
* {
 background-color: red;
}

font-weight --> it will give thickness for the text
font-weight:900
font-weight:bolder;


we will not give value in the pixels. if we give also it will not apply
font-size: x-large;
font-size: x-small; --> we can give unit to the font size
font-style: italic;
letter-spacing: 2px;
word-spacing: 1px;

box model

1)Margin
2)Border
3)padding
4)content

.message {
border: 3px solid black;
width: 300px;
text-align:center;
margin:200px;
padding: 100px;
}

padding

paddding-top
padding-right
padding-bottom
padding-left

ShortForm

Padding: 10px 5px 20px 15px

it will take units as top,right,bottom,left

Margin

margin-top
margin-right
margin-bottom
margin-left
Margin:10px 5px 20px 15px

BoxSizing - will control the width
box-sizing: borderbox //it will control the width
box-sizing: content-box == default

.message {
  border: 100px solid black;
  width: 300px;
  margin: 100px;
  padding:100px;
  box-sizing: border-box;
}

Images in CSS

index.html

<div class="picture-box">
<img class="men-image" src="" alt=" " >
 </div>

 .picture-box {
border: 2px solid black;
width:300px;
height:300px;
 }

.men-image {
width:100%;
}

Background-image 
body {
background-image: url("");
background-repeat:no-repeat;
background-size: cover;
}

If I want to set a backgroundImage in picture box

border: 2px solid black;
width: 300px;
height : 300px;
background-image: url("");
background-repeat:no-repeat;
background-size:cover;
background-position: center;


<body>
<h2>Element Selctors</h2>
<div>
<h2 class="simple"> Content </h2>
<h2>testing color </h2>
</div>
</body>

css

h2 {
color: red
}

div h2 {
color: blue;
border: 1px solid green
}

div .sample {
border: 2px solid brown
}

<div>
<p>Loreum ipsum color sit amet</p>
</div>

<div>
<p id="apple">Fruits</p>
</div>

descendant selctor

div p {
background-color: lightCoral;
}

child selctor

div>#apple {
background-color: red;
}

Display 

display: block
it will occupy 100% width and it will push down the next eleemnt
display:inline
it will not apply height and width. all elements are in line.
display:inline-block
we can apply measurmentsa and all elements will come in line.
display:none
if we apply display:none no element will visible

Position in CSS

position: static(Default)
position:relative
position:absolute
position:fixed
position:sticky

<body>
<h1>Positions </h1>
<div class="list-of-positon">
<div>Static</div>
<div>Relative</div>
<div>Absolute</div>
<div>Sticky</div>
</div>

list of positions is parent to all other divs

div {
position:relative;
top:200px;
left:100px;
}

when we apply position:relative
based on helpers like top,right,bottom,left we can change the position of child

<body>
<div class="fruits">
<div class="apple"></div>
<div class="apple"></div>
</div>

</body>

.fruits {
border: 1px solid black;
margin: 100px
}

.apple{
width:200px;
height:200px;
background-color:maroon;
display:inline-black;
position:relative;
left:400px;
top:400px;
}

mango{
width:200px;
height:200px;
background-color:maroon;
display:inline-black;
}

<body>
<div class="box-container">
<div class="box-1"></div>
<div class="box-2"></div>
<div class="box-3"></div>
<div class="box-4"></div>
</div>
</body>

.box-container {
border: 2px solid black;
width:500px;
margin:200px;
padding:50px;
position: relative;
}

.box-1 {
width:100px;
height:100px;
display:inline-block;
position:absolute;
top:100px;
}

when we keep position:absolute; it will free from the position 
where we keep position: relative --> it will treat as a parent
when we use zIndex:10 --> it will show that element top of the all the elements
.box-1 {
width:100px;
height:100px;
display:inline-block;
position:absolute;
top:100px;
zIndex: 10;
}
if u want to keep down --> we have to use negative value
zIndex:-10

colors --> rgb,hexacode
to fix the image at particular position

<img src=".jpg" alt="whtasapp" />

.paper img {
   position:fixed;
   right:0;
   bottom:0;
   width:50px;
   height:50px;
  }

I want to fix the navbar, if i scroll the content also navbar should be visible
if i use position: sticky --> it will take two seperate spaces , two seperate divs

it will not overlay the content
.nav-bar {
color:white;
background-color:gray;
text-align: center
position:sticky
top:0px;
width:100%;
height:200px;
}

.box-2 {
border: 3px solid black;
width:200px;
height:200px;
display:inline-block;
border-radius:10px; // it will round the corner
}

Pseudo Classes
:hover
:active
:focus
:first-child
:last-child
:nth child(n)
:checked

<body>
<div class = "test" >
  <img src="projects-images/men.jpg />
</div>

<button class="test-btn">
 Click ME
</button>

<div class="sample">
<input type="text" placeholder="Enter your name" ><br>
<input type="text" placeholder="Enter your phone number" ><br>
<input type="text" placeholder="Enter your address" ><br>
<input type="text" placeholder="Enter your city" ><br>
</div>

<div class = "list-fruits">
<ol>
  <li>Apple</li>
   <li>Mango</li>
    <li>Grapes</li>
     <li>Banana</li>
     <li>Strawberry</li>
</ol>
<div>

<input type="checkbox">
<label for="">checkMe</label>

</body

.test {
width: 100px;
height:100px;
margin: 200px;
}

.test img {
width:100%
}

.test:hover {
width:200px;
height:200px;
}

.test-btn {
  width:100px;
  height:50px;
  border-radius:10px;
  position:relative;
  top:-300px;
  left:500px;
}
.test-btn:active {
 background-color:red;
}

.sample {
position:relative;
top:-300px;
left:800px;
}

.sample input {
width: 500px;
height:50px;
margin-bottom:10px;
}

.sample input :focus {
background-color: aquamarine;
}

list-fruits ol li:first-child{
  color:red;
}

list-fruits ol li:first-child{
  color:red;
}

list-fruits ol li:nth-child(3){
  color:red;
}

input[type=checkbox]:checked+label {
color: red;
font-size: larger;
}

===> active

<div class = "test" >
  <img src="projects-images/men.jpg />
</div>

.test {
width: 100px;
height:100px;
margin: 200px;
}

.test img {
width:100%
}

.test:hover {
width:200px;
height:200px;
}

pseudo elements 

::before
::after
::first-letter
::first-line
::placeholder

<body>
<div class="test-message">
  loreum is a hjklooooopp jjjkkk llll uuu oppobsx
</div>

<div>
<input type="text" placeholder="Enter your phone number">
</div>

</body>

.test-message p :: before{
    content: "This is my Paragraph";
    color: blue;
}

.test-message p :: after{
    content: "End of the Paragraph";
    color: blue;
}

.test-message p::first-letter{
  color: darkmagenta;
}
.test-message p::first-line{
  color: red;
}

input::placeholder {
color: brown;
}


Gradien Effect

linear-gradient()
radial-gradient()

<body>
 <div class="sample-box">
    <h2>Gradient Effect</h2>
  </div>
<div class="sample-two">
    <h2>Radial Effect</h2>
  </div>
</body>

.sample-box{
background: linear-gradient(to right,pink,lightblue)
height: 300px;
}

.sample-box{
background: linear-gradient(to bottom,pink,lightblue,yellow)
height: 300px;
width:300px;
}

.sample-two {
background: radial-gradient(circle,lightblue,rgb(0,109,128),rgb(192,189,17));
height:100vh;
}

               Units

-->pixels,percentage(%)
--->rem,em //depend on fontsize
--->vh,vw


















































     





